<?xml version="1.0" encoding="UTF-8"?>
<flow id="c5c55c48-5241-4748-a9d8-28e0c4eadb91">
  <descriptionCdata><![CDATA[c5c55c48-5241-4748-a9d8-28e0c4eadb91.a8eda2c0-102e-41c8-83b1-0e2fe96f4165.description=<pre>This operation performs an HTTP request and parses the response. It provides features such as\: HTTP authentication, HTTP secure, connection pool, cookies, proxy. To acomplish this it uses the third parties from Apache\: HttpClient 4.3, HttpCore 4.3. It also uses the JCIFS library from the Samba for the NTLM authentication.\n\nInputs\:\n    url - The web address to make the request to. This must be a standard URL as specified in RFC 3986.\nFormat\: scheme\://domain\:port/path?query_string\#fragment_id\nExamples\: https\://[fe80\:\:1260\:4bff\:fe49\:42fc]\:8080/my/path?key1\=val1&key2\=val2\#my_fragment\n    authType - The type of authentication used by this operation when trying to execute the request on the target server. The authentication is not preemptive\: a plain request not including authentication info will be made and only when the server responds with a 'WWW-Authenticate' header, the client sends the required headers. If the server needs no authentication but you specify one in this input the request will still be valid but the client cannot choose the authentication method and there is no fallback so you have to know which one you need. If the web application and proxy use different authentication types, these must be specified as shown in the example.\nDefault value\: basic\nValid values\: basic, digest, ntlm, kerberos, any, anonymous, "" or a list of valid values separated by comma.\nExample\: basic,digest\n    username - The user name used for authentication. For NTLM authentication, the required format is "domain\\user". If you only specify the "user", a period is added in the format ".\\user" so that a local user on the target machine can be used. The username is required for all authentication schemes except Kerberos.\n    password - The password used for authentication.\n    preemptiveAuth - If this field is "true", authentication info is sent in the first request. If this field is "false" a request with no authentication info will be made and if server responds with 401 and a header such as WWW-Authenticate\: Basic realm\="myRealm" only then the authentication info will be sent.\nDefault value\: true\nValid values\: true, false\n    kerberosConfFile - A krb5.conf file with content similar to the one in the examples (where you replace CONTOSO.COM with your domain and 'ad.contoso.com' with your kdc FQDN). This configures the Kerberos mechanism required by the Java GSS-API methods.\nFormat\: http\://web.mit.edu/kerberos/krb5-1.4/krb5-1.4.4/doc/krb5-admin/krb5.conf.html\n    kerberosLoginConfFile - A login.conf file needed by the JAAS framework with the content similar to the one in examples\nFormat\: http\://docs.oracle.com/javase/7/docs/jre/api/security/jaas/spec/com/sun/security/auth/module/Krb5LoginModule.html\nExamples\: com.sun.security.jgss.initiate {com.sun.security.auth.module.Krb5LoginModule required principal\=Administrator doNotPrompt\=true useKeyTab\=true keyTab\="file\:/C\:/Users/Administrator.CONTOSO/krb5.keytab";};\n    kerberosSkipPortForLookup - Do not include port in the key distribution center database lookup.\nDefault value\: true\nValid values\: true, false\n    proxyHost - The proxy server used to access the web site.\n    proxyPort -The proxy server port. Default\: 8080. Valid values\: -1 and numbers greater than 0.\n    proxyUsername -The user name used when connecting to the proxy. The "authType" input will be used to choose authentication type. The "Basic" and "'Digest" proxy authentication types are supported.\n    proxyPassword - The proxy server password associated with the proxyUsername input value.\n    trustAllRoots - Specifies whether to enable weak security over SSL/TSL. A certificate is trusted even if no trusted certification authority issued it.\nDefault value\: false\nValid values\: true, false\n    x509HostnameVerifier - Specifies the way the server hostname must match a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate. Set this to "allow_all" to skip any checking, but you become vulnerable to attacks. For the value "browser_compatible" the hostname verifier works the same way as Curl and Firefox. The hostname must match either the first CN, or any of the subject-alts. A wildcard can occur in the CN, and in any of the subject-alts. The only difference between "browser_compatible" and "strict" is that a wildcard (such as "*.foo.com") with "browser_compatible" matches all subdomains, including "a.b.foo.com". From the security perspective, to provide protection against possible Man-In-The-Middle attacks, we strongly recommend to use "strict" option.\nDefault value\: strict\nValid values\: strict,browser_compatible,allow_all\n    trustKeystore - The pathname of the Java TrustStore file. This contains certificates from other parties that you expect to communicate with, or from Certificate Authorities that you trust to identify other parties.  If the protocol (specified by the 'url') is not "https" or if trustAllRoots is "true" this input is ignored.\nDefault value\: <OO_Home>/java/lib/security/cacerts\nFormat\: Java KeyStore (JKS)\n    trustPassword - The password associated with the TrustStore file. If trustAllRoots is false and trustKeystore is empty, trustPassword default will be supplied.\nDefault value\: changeit\n    keystore - The pathname of the Java KeyStore file. You only need this if the server requires client authentication. If the protocol (specified by the URL) is not "https" or if trustAllRoots is "true" this input is ignored.\nDefault value\: <OO_Home>/java/lib/security/cacerts\nFormat\: Java KeyStore (JKS)\n    keystorePassword - The password associated with the KeyStore file. If trustAllRoots is false and keystore is empty, keystorePassword default will be supplied.\nDefault value\: changeit\n    connectTimeout - The time to wait for a connection to be established, in seconds. A timeout value of 0 represents an infinite timeout.\nDefault value\: 0\nFormat\: an integer representing seconds\nExamples\: 10, 20\n    socketTimeout - The timeout for waiting for data (a maximum period inactivity between two consecutive data packets), in seconds. A socketTimeout value of 0 represents an infinite timeout.\nDefault value\: 0\nFormat\: an integer representing seconds\n    useCookies - Specifies whether to enable cookie tracking or not. Cookies are stored between consecutive calls in a serializable session object therefore they will be available on a branch level (same subflow, same lane). If you specify a non-boolean value, the default value is used.\nDefault value\: true\nValid values\: true, false\n    keepAlive - Specifies whether to create a shared connection that will be used in subsequent calls. If keepAlive is false, the already open connection will be used and after execution it will close it. The operation will use a connection pool stored in a GlobalSessionObject that will be available throughout the execution (the flow and subflows, between parallel split lanes).\nDefault value\: true\nValid values\: true, false\n    connectionsMaxPerRoute - The maximum limit of connections on a per route basis. The default will create no more than 2 concurrent connections per given route.\nDefault value\: 2\n    connectionsMaxTotal - The maximum limit of connections in total. The default will create no more than 20 concurrent connections in total.\nDefault value\: 20\n    followRedirects - Specifies whether the HTTP client automatically follows redirects.  Redirects explicitly prohibited by the HTTP specification as requiring user intervention will not be followed (redirects on POST and PUT requests that are converted to GET requests). If you specify a non-boolean value, the default value is used.\nDefault value\: true\nValid values\: true, false\n    headers - The list containing the headers to use for the request separated by new line (CRLF).The header name-value pair will be separated by "\:".\nFormat\: According to HTTP standard for headers (RFC 2616).\nExamples\: Accept\:text/plain\n    destinationFile - The absolute path of a file on the disk in whch to save the entity returned by the response. "returnResult" will no longer be populated with the entity if this is specified. You should not use this for method\=HEAD or OPTIONS. \nExample\: C\:\\temp\\destinationFile.txt\n    responseCharacterSet - The character encoding to be used for the HTTP response. If responseCharacterSet is empty, the charset from the "Content-Type" HTTP response header will be used. If responseCharacterSet is empty and the charset from the HTTP response Content-Type header is empty, the default value will be used. You should not use this for method\=HEAD or OPTIONS.\nDefault value\: ISO-8859-1\n    queryParams - The list containing query parameters to append to the URL. The names and the values must not be URL-encoded unless you specify "queryParamsAreURLEncoded"\=true as if they are encoded and "queryParamsAreURLEncoded"\=false they will be double-encoded. The separator between name-value pairs is "&". The query name will be separated from query value by "\=". Note that you need to URL encode at least "&" to "%26" and "\=" to "%3D" and set "queryParamsAreURLEncoded"\="true" if you leave the other special URL characters unencoded they will be encoded by the HTTP Client.\nExamples\: parameterName1\=parameterValue1&parameterName2\=parameterValue2;\n    queryParamsAreURLEncoded - Specifies whether to encode  (according to the url encoding standard) the queryParams. If you set "queryParamsAreURLEncoded"\=true and you have invalid characters in 'queryParams' they will get encoded anyway. If "queryParamsAreURLEncoded"\=false all characters will be encoded. But the ' ' (space) character will be encoded as + if queryParamsAreURLEncoded is either true or false. Also %20 will be encoded as + if "queryParamsAreURLEncoded"\=true. If you specify a non-boolean value, the default value is used.\nDefault value\: false\nValid values\: true, false\n    queryParamsAreFormEncoded - Specifies whether to encode the queryParams in the the default format used by the apache http client library - form format. If this input is true then all characters will be encoded based on the queryParamsAreURLEncoded input.If queryParamsAreFormEncoded\=false all reserved chars are not encoded no matter of queryParamsAreURLEncoded input.The only exceptions are for space(' ')character which is encoded as %20 and + (plus) which is encoded as %20 and not encoded if queryParamsAreURLEncoded\=false. Check the "v2.0" folder description for more details.\nDefault value\: true. \nValid values\: true, false\nExample\: query\=test te%20@st will be encoded in query\=test%20te%20@st\n    formParams - This input needs to be given in form-encoded format and will set the entity to be sent in the request. It will also set the content-type to application/x-www-form-urlencoded. This should only be used with method\=POST. Note that you need to URL encode at least "&" to "%26" and "\=" to "%3D" and set "queryParamsAreURLEncoded"\="true". If you leave the other special URL characters unencoded they will be encoded by the HTTP Client.\nExamples\: input1\=value1&input2\=value2\n(The client will send\: input1\=value1&in+put+2\=val+u%0A+e2)\n    formParamsAreURLEncoded - If set to "true", formParams will be encoded  (according to the URLl encoding standard). If you set "formParamsAreURLEncoded"\=true and you have invalid characters in "formParams", they will still be encoded. This should only be used with method\=POST.\nDefault value\: false\nValid values\: true, false\n    sourceFile - The absolute path of a file on the disk from which to read the entity for the HTTP request. This will be read using the "requestCharacterSet" or "contentType" input (see below). This should not be provided for methods GET, HEAD, TRACE.\nExamples\: C\:\\a.txt\n    body - The string to include in body for the HTTP POST operation. If both the "sourceFile" and "body" inputs are provided, "body" takes precedence over "sourceFile". This should not be provided for methods GET, HEAD, TRACE.\n    contentType - The content type that should be set in the request header, representing the MIME-type of the data in the message body.\nDefault value\: "" (empty)\nExamples\: "text/html", "application/x-www-form-urlencoded"\n    requestCharacterSet - The character encoding to be used for the HTTP request body. If contentType is empty, the requestCharacterSet will use the default value. If contentType will include charset (ex.\: "application/json; charset\=UTF-8"), the requestCharacterSet value will overwrite the charset value from contentType input. This should not be provided for method\=GET, HEAD, TRACE\nDefault value\: ISO-8859-1\n    multipartBodies - This is a name-textValue list of pairs separated by "&". This also takes into account the "contentType" and "charset" inputs. Check the "v2.0" folder description for more help.\nExamples\: name1\=textvalue1&name2\=textvalue2\n    multipartBodiesContentType - Each entity from the multipart entity has a content-type header. You can only specify it once for all the parts and it is the only way to change the characterSet of the encoding.\nDefault value\: text/plain; charset\=ISO-8859-1\nExamples\: text/plain; charset\=UTF-8\n    multipartValuesAreURLEncoded - You need to set this to 'true' if the bodies may contain the "&" and "\=" separators and you also need to URL encode them so that "&" becomes %26 and "\=" becomes %3D (using the URL Encoder operation on each value or by a simple replace).\nDefault value\: false\n    multipartFiles - This is a list of name\=filePath pairs. This will also take into account the "contentType" and "charset" inputs. Check the "v2.0" folder description for more help.\nExamples\: name3\=c\:\\a.txt&name4\=c\:\\b.properties\n    multipartFilesContentType - Each entity from the multipart entity has a content-type header. You can only specify it once for all parts.\nDefault value\: application/octet-stream\nExamples\: image/png,text/plain\n    chunkedRequestEntity - Data is sent in a series of "chunks".It uses the Transfer-Encoding HTTP header in place of the Content-Length header.It is recommended to let HttpClient choose the most appropriate transfer encoding based on the properties of the HTTP message being transferred. It is possible, however, to inform HttpClient that chunk coding is preferred by setting this input to "true". Note that HttpClient will use this flag as a hint only. This value will be ignored when using HTTP protocol versions that do not support chunk coding, such as HTTP/1.0. This setting is ignored for multipart post entities.\nDefault value\:\nValid values\: true, false\n    method - The HTTP method used. This is a required input.\n\nOutputs\:\n    returnResult - This will contain the response entity (unless 'destinationFile' is specified). In case of an error this output will contain the error message.\n    exception - In case of success response, this result is empty. In case of failure response, this result contains the java stack trace of the runtime exception.\n    statusCode - The HTTP status code.\nFormat\: 1xx (Informational - Request received, continuing process), 2xx (Success - The action was successfully received, understood, and accepted), 3xx (Redirection - Further action must be taken in order to complete the request), 4xx (Client Error - The request contains bad syntax or cannot be fulfilled), 5xx Server Error - The server failed to fulfil an apparently valid request)\nExamples\: 200, 404\n    finalLocation - The final location after redirects.\nFormat\: URL\n    responseHeaders - The list containing the headers of the response message, separated by newline.\nFormat\: According to HTTP standard for headers (RFC 2616).\n    protocolVersion - The HTTP protocol version.\nExamples\: HTTP/1.1\n    reasonPhrase - The reason phrase from the origin HTTP response. This depends on the status code and are according to RFC 1945 and RFC 2048\nCheck the "v2.0" folder description for more examples and values.\n    returnCode - The returnCode of the operation\: 0 for success, -1 for failure.\n\nResponses\:\n    success - The operation completed without a runtime exception. Thisl results in success for any HTTP codes even those in the 400-599 range.\n    failure - A runtime exception occurred. This may be due to incorrectly formatted inputs (authType, contentType, headers, method, proxy, queryParams, requestCharacterSet, responseCharacterSet, trustStore, url), or failed ntlm or Kerberos authentication.\n\nNotes\:\nCheck the "v2.0" folder description for more help.\n</pre>
]]></descriptionCdata>
  <annotation></annotation>
  <name>DNS_LB_Configurations</name>
  <categories/>
  <inputs/>
  <possibleResponses>
    <opResponse id="620682a6-f035-4264-a57f-48de069c28eb">
      <annotation></annotation>
      <name>success</name>
      <isDefault>true</isDefault>
      <onFailure>false</onFailure>
      <type>RESOLVED</type>
      <matchRules/>
    </opResponse>
    <opResponse id="9dd08e58-495d-4c2c-be31-b97fc8916d23">
      <annotation></annotation>
      <name>failure</name>
      <isDefault>false</isDefault>
      <onFailure>true</onFailure>
      <type>ERROR</type>
      <matchRules/>
    </opResponse>
  </possibleResponses>
  <availableResultExpressions/>
  <resultExpression id="547332d1-114c-4a66-986b-533831f5d6a4">
    <annotation></annotation>
    <name>FailureMessage</name>
    <fieldName>FailureMessage</fieldName>
    <sourceType>RAWRESULT</sourceType>
    <filters/>
  </resultExpression>
  <iconSpec id="049eea96-7c8f-46a6-99b0-51467174ce8a">
    <baseIcon>flow.png</baseIcon>
    <basePath>System</basePath>
    <readOnly>false</readOnly>
    <layers/>
  </iconSpec>
  <callouts/>
  <checkPointFlow>true</checkPointFlow>
  <compatibleRuntimeContext>false</compatibleRuntimeContext>
  <historyCheckPointFlow>true</historyCheckPointFlow>
  <steps>
    <step id="a8eda2c0-102e-41c8-83b1-0e2fe96f4165">
      <annotation>c5c55c48-5241-4748-a9d8-28e0c4eadb91.a8eda2c0-102e-41c8-83b1-0e2fe96f4165.description</annotation>
      <name>Access Application Through URL or Web</name>
      <bounds>
        <x>197.0</x>
        <y>0.0</y>
      </bounds>
      <layer>-1</layer>
      <hideInbound>false</hideInbound>
      <addResultToRunContext>false</addResultToRunContext>
      <isCriticalStep>false</isCriticalStep>
      <isNonBlocking>false</isNonBlocking>
      <isParallelStep>false</isParallelStep>
      <isSingleResponse>false</isSingleResponse>
      <recordInHistory>false</recordInHistory>
      <recordRawOutput>true</recordRawOutput>
      <recordPrimaryOutput>true</recordPrimaryOutput>
      <checkPointStep>true</checkPointStep>
      <historyCheckPointStep>true</historyCheckPointStep>
      <scriptResultStep>false</scriptResultStep>
      <userPrompt></userPrompt>
      <bindings>
        <staticBinding id="761c3165-a1c9-48b4-b57a-bb1eeec32adc">
          <assignFromContext>false</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>true</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>url</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value>www.applicationURL.com</value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="531e8960-8149-4fc0-82be-c0183b1387f1">
          <assignFromContext>true</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>true</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>method</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value>get</value>
          <record>false</record>
        </staticBinding>
      </bindings>
      <transitions>
        <transition id="27405156-5f6a-48f1-a197-fb0106bbd4e1">
          <annotation></annotation>
          <name>failure</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>failure</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>3233a371-ed77-4711-81db-2ce9c5366c94</refId>
          </destination>
          <source>
            <refId>a8eda2c0-102e-41c8-83b1-0e2fe96f4165</refId>
          </source>
          <positions>
            <point>
              <x>320.0</x>
              <y>124.0</y>
            </point>
            <point>
              <x>249.0</x>
              <y>273.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
        <transition id="351742f9-339c-4003-96d5-c678c15d1197">
          <annotation></annotation>
          <name>success</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>success</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>5263185e-12e1-4e5b-87dd-df5adb768c2b</refId>
          </destination>
          <source>
            <refId>a8eda2c0-102e-41c8-83b1-0e2fe96f4165</refId>
          </source>
          <positions>
            <point>
              <x>320.0</x>
              <y>124.0</y>
            </point>
            <point>
              <x>530.0</x>
              <y>124.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
      </transitions>
      <properties/>
      <opRef>
        <refId>c18c55a3-157d-42b2-bf0e-947feaed89bb</refId>
      </opRef>
      <assignments/>
      <throttleSize>0</throttleSize>
    </step>
    <returnStep id="5263185e-12e1-4e5b-87dd-df5adb768c2b">
      <annotation></annotation>
      <name>Resolved : success</name>
      <bounds>
        <x>448.0</x>
        <y>0.0</y>
      </bounds>
      <layer>-1</layer>
      <hideInbound>false</hideInbound>
      <addResultToRunContext>false</addResultToRunContext>
      <isCriticalStep>false</isCriticalStep>
      <isNonBlocking>false</isNonBlocking>
      <isParallelStep>false</isParallelStep>
      <isSingleResponse>false</isSingleResponse>
      <recordInHistory>false</recordInHistory>
      <recordRawOutput>true</recordRawOutput>
      <recordPrimaryOutput>true</recordPrimaryOutput>
      <checkPointStep>true</checkPointStep>
      <historyCheckPointStep>true</historyCheckPointStep>
      <scriptResultStep>false</scriptResultStep>
      <userPrompt></userPrompt>
      <bindings/>
      <transitions>
        <transition id="1bafea82-b6dc-4ae5-93d4-71f4a3d9652d">
          <annotation></annotation>
          <name>return</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>success</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>5263185e-12e1-4e5b-87dd-df5adb768c2b</refId>
          </destination>
          <source>
            <refId>5263185e-12e1-4e5b-87dd-df5adb768c2b</refId>
          </source>
          <positions/>
        </transition>
      </transitions>
      <properties/>
      <returnStepType>RESOLVED</returnStepType>
      <assignments/>
    </returnStep>
    <returnStep id="3233a371-ed77-4711-81db-2ce9c5366c94">
      <annotation></annotation>
      <name>Error : failure</name>
      <bounds>
        <x>199.0</x>
        <y>239.0</y>
      </bounds>
      <layer>-1</layer>
      <hideInbound>false</hideInbound>
      <addResultToRunContext>false</addResultToRunContext>
      <isCriticalStep>false</isCriticalStep>
      <isNonBlocking>false</isNonBlocking>
      <isParallelStep>false</isParallelStep>
      <isSingleResponse>false</isSingleResponse>
      <recordInHistory>false</recordInHistory>
      <recordRawOutput>true</recordRawOutput>
      <recordPrimaryOutput>true</recordPrimaryOutput>
      <checkPointStep>true</checkPointStep>
      <historyCheckPointStep>true</historyCheckPointStep>
      <scriptResultStep>false</scriptResultStep>
      <userPrompt></userPrompt>
      <bindings/>
      <transitions>
        <transition id="f7f9a7df-9e9d-4232-bd08-e6366fd75947">
          <annotation></annotation>
          <name>return</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>failure</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>3233a371-ed77-4711-81db-2ce9c5366c94</refId>
          </destination>
          <source>
            <refId>3233a371-ed77-4711-81db-2ce9c5366c94</refId>
          </source>
          <positions/>
        </transition>
      </transitions>
      <properties/>
      <returnStepType>ERROR</returnStepType>
      <assignments/>
    </returnStep>
  </steps>
  <startSteps>a8eda2c0-102e-41c8-83b1-0e2fe96f4165</startSteps>
</flow>